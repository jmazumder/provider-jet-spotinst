//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationsObservation) DeepCopyInto(out *ApplicationsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationsObservation.
func (in *ApplicationsObservation) DeepCopy() *ApplicationsObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationsParameters) DeepCopyInto(out *ApplicationsParameters) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationsParameters.
func (in *ApplicationsParameters) DeepCopy() *ApplicationsParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Aws) DeepCopyInto(out *Aws) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Aws.
func (in *Aws) DeepCopy() *Aws {
	if in == nil {
		return nil
	}
	out := new(Aws)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Aws) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsList) DeepCopyInto(out *AwsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Aws, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsList.
func (in *AwsList) DeepCopy() *AwsList {
	if in == nil {
		return nil
	}
	out := new(AwsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AwsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsObservation) DeepCopyInto(out *AwsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OutputClusterID != nil {
		in, out := &in.OutputClusterID, &out.OutputClusterID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsObservation.
func (in *AwsObservation) DeepCopy() *AwsObservation {
	if in == nil {
		return nil
	}
	out := new(AwsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsParameters) DeepCopyInto(out *AwsParameters) {
	*out = *in
	if in.AdditionalInfo != nil {
		in, out := &in.AdditionalInfo, &out.AdditionalInfo
		*out = new(string)
		**out = **in
	}
	if in.AdditionalPrimarySecurityGroups != nil {
		in, out := &in.AdditionalPrimarySecurityGroups, &out.AdditionalPrimarySecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AdditionalReplicaSecurityGroups != nil {
		in, out := &in.AdditionalReplicaSecurityGroups, &out.AdditionalReplicaSecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Applications != nil {
		in, out := &in.Applications, &out.Applications
		*out = make([]ApplicationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BootstrapActionsFile != nil {
		in, out := &in.BootstrapActionsFile, &out.BootstrapActionsFile
		*out = make([]BootstrapActionsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationsFile != nil {
		in, out := &in.ConfigurationsFile, &out.ConfigurationsFile
		*out = make([]ConfigurationsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CoreDesiredCapacity != nil {
		in, out := &in.CoreDesiredCapacity, &out.CoreDesiredCapacity
		*out = new(int64)
		**out = **in
	}
	if in.CoreEBSBlockDevice != nil {
		in, out := &in.CoreEBSBlockDevice, &out.CoreEBSBlockDevice
		*out = make([]CoreEBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CoreEBSOptimized != nil {
		in, out := &in.CoreEBSOptimized, &out.CoreEBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.CoreInstanceTypes != nil {
		in, out := &in.CoreInstanceTypes, &out.CoreInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CoreLifecycle != nil {
		in, out := &in.CoreLifecycle, &out.CoreLifecycle
		*out = new(string)
		**out = **in
	}
	if in.CoreMaxSize != nil {
		in, out := &in.CoreMaxSize, &out.CoreMaxSize
		*out = new(int64)
		**out = **in
	}
	if in.CoreMinSize != nil {
		in, out := &in.CoreMinSize, &out.CoreMinSize
		*out = new(int64)
		**out = **in
	}
	if in.CoreScalingDownPolicy != nil {
		in, out := &in.CoreScalingDownPolicy, &out.CoreScalingDownPolicy
		*out = make([]CoreScalingDownPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CoreScalingUpPolicy != nil {
		in, out := &in.CoreScalingUpPolicy, &out.CoreScalingUpPolicy
		*out = make([]CoreScalingUpPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CoreUnit != nil {
		in, out := &in.CoreUnit, &out.CoreUnit
		*out = new(string)
		**out = **in
	}
	if in.CustomAMIID != nil {
		in, out := &in.CustomAMIID, &out.CustomAMIID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EBSRootVolumeSize != nil {
		in, out := &in.EBSRootVolumeSize, &out.EBSRootVolumeSize
		*out = new(int64)
		**out = **in
	}
	if in.EC2KeyName != nil {
		in, out := &in.EC2KeyName, &out.EC2KeyName
		*out = new(string)
		**out = **in
	}
	if in.ExposeClusterID != nil {
		in, out := &in.ExposeClusterID, &out.ExposeClusterID
		*out = new(bool)
		**out = **in
	}
	if in.InstanceWeights != nil {
		in, out := &in.InstanceWeights, &out.InstanceWeights
		*out = make([]InstanceWeightsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobFlowRole != nil {
		in, out := &in.JobFlowRole, &out.JobFlowRole
		*out = new(string)
		**out = **in
	}
	if in.KeepJobFlowAlive != nil {
		in, out := &in.KeepJobFlowAlive, &out.KeepJobFlowAlive
		*out = new(bool)
		**out = **in
	}
	if in.LogURI != nil {
		in, out := &in.LogURI, &out.LogURI
		*out = new(string)
		**out = **in
	}
	if in.ManagedPrimarySecurityGroup != nil {
		in, out := &in.ManagedPrimarySecurityGroup, &out.ManagedPrimarySecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.ManagedReplicaSecurityGroup != nil {
		in, out := &in.ManagedReplicaSecurityGroup, &out.ManagedReplicaSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.MasterEBSBlockDevice != nil {
		in, out := &in.MasterEBSBlockDevice, &out.MasterEBSBlockDevice
		*out = make([]MasterEBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MasterEBSOptimized != nil {
		in, out := &in.MasterEBSOptimized, &out.MasterEBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.MasterInstanceTypes != nil {
		in, out := &in.MasterInstanceTypes, &out.MasterInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MasterLifecycle != nil {
		in, out := &in.MasterLifecycle, &out.MasterLifecycle
		*out = new(string)
		**out = **in
	}
	if in.MasterTarget != nil {
		in, out := &in.MasterTarget, &out.MasterTarget
		*out = new(int64)
		**out = **in
	}
	if in.ProvisioningTimeout != nil {
		in, out := &in.ProvisioningTimeout, &out.ProvisioningTimeout
		*out = make([]ProvisioningTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReleaseLabel != nil {
		in, out := &in.ReleaseLabel, &out.ReleaseLabel
		*out = new(string)
		**out = **in
	}
	if in.RepoUpgradeOnBoot != nil {
		in, out := &in.RepoUpgradeOnBoot, &out.RepoUpgradeOnBoot
		*out = new(string)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(int64)
		**out = **in
	}
	if in.ScheduledTask != nil {
		in, out := &in.ScheduledTask, &out.ScheduledTask
		*out = make([]ScheduledTaskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityConfig != nil {
		in, out := &in.SecurityConfig, &out.SecurityConfig
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccessSecurityGroup != nil {
		in, out := &in.ServiceAccessSecurityGroup, &out.ServiceAccessSecurityGroup
		*out = new(string)
		**out = **in
	}
	if in.ServiceRole != nil {
		in, out := &in.ServiceRole, &out.ServiceRole
		*out = new(string)
		**out = **in
	}
	if in.StepsFile != nil {
		in, out := &in.StepsFile, &out.StepsFile
		*out = make([]StepsFileParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskDesiredCapacity != nil {
		in, out := &in.TaskDesiredCapacity, &out.TaskDesiredCapacity
		*out = new(int64)
		**out = **in
	}
	if in.TaskEBSBlockDevice != nil {
		in, out := &in.TaskEBSBlockDevice, &out.TaskEBSBlockDevice
		*out = make([]TaskEBSBlockDeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskEBSOptimized != nil {
		in, out := &in.TaskEBSOptimized, &out.TaskEBSOptimized
		*out = new(bool)
		**out = **in
	}
	if in.TaskInstanceTypes != nil {
		in, out := &in.TaskInstanceTypes, &out.TaskInstanceTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TaskLifecycle != nil {
		in, out := &in.TaskLifecycle, &out.TaskLifecycle
		*out = new(string)
		**out = **in
	}
	if in.TaskMaxSize != nil {
		in, out := &in.TaskMaxSize, &out.TaskMaxSize
		*out = new(int64)
		**out = **in
	}
	if in.TaskMinSize != nil {
		in, out := &in.TaskMinSize, &out.TaskMinSize
		*out = new(int64)
		**out = **in
	}
	if in.TaskScalingDownPolicy != nil {
		in, out := &in.TaskScalingDownPolicy, &out.TaskScalingDownPolicy
		*out = make([]TaskScalingDownPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskScalingUpPolicy != nil {
		in, out := &in.TaskScalingUpPolicy, &out.TaskScalingUpPolicy
		*out = make([]TaskScalingUpPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TaskUnit != nil {
		in, out := &in.TaskUnit, &out.TaskUnit
		*out = new(string)
		**out = **in
	}
	if in.TerminationPolicies != nil {
		in, out := &in.TerminationPolicies, &out.TerminationPolicies
		*out = make([]TerminationPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationProtected != nil {
		in, out := &in.TerminationProtected, &out.TerminationProtected
		*out = new(bool)
		**out = **in
	}
	if in.VisibleToAllUsers != nil {
		in, out := &in.VisibleToAllUsers, &out.VisibleToAllUsers
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsParameters.
func (in *AwsParameters) DeepCopy() *AwsParameters {
	if in == nil {
		return nil
	}
	out := new(AwsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsSpec) DeepCopyInto(out *AwsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsSpec.
func (in *AwsSpec) DeepCopy() *AwsSpec {
	if in == nil {
		return nil
	}
	out := new(AwsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AwsStatus) DeepCopyInto(out *AwsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AwsStatus.
func (in *AwsStatus) DeepCopy() *AwsStatus {
	if in == nil {
		return nil
	}
	out := new(AwsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootstrapActionsFileObservation) DeepCopyInto(out *BootstrapActionsFileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootstrapActionsFileObservation.
func (in *BootstrapActionsFileObservation) DeepCopy() *BootstrapActionsFileObservation {
	if in == nil {
		return nil
	}
	out := new(BootstrapActionsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootstrapActionsFileParameters) DeepCopyInto(out *BootstrapActionsFileParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootstrapActionsFileParameters.
func (in *BootstrapActionsFileParameters) DeepCopy() *BootstrapActionsFileParameters {
	if in == nil {
		return nil
	}
	out := new(BootstrapActionsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationsFileObservation) DeepCopyInto(out *ConfigurationsFileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationsFileObservation.
func (in *ConfigurationsFileObservation) DeepCopy() *ConfigurationsFileObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationsFileParameters) DeepCopyInto(out *ConfigurationsFileParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationsFileParameters.
func (in *ConfigurationsFileParameters) DeepCopy() *ConfigurationsFileParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreEBSBlockDeviceObservation) DeepCopyInto(out *CoreEBSBlockDeviceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreEBSBlockDeviceObservation.
func (in *CoreEBSBlockDeviceObservation) DeepCopy() *CoreEBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(CoreEBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreEBSBlockDeviceParameters) DeepCopyInto(out *CoreEBSBlockDeviceParameters) {
	*out = *in
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(int64)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(int64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
	if in.VolumesPerInstance != nil {
		in, out := &in.VolumesPerInstance, &out.VolumesPerInstance
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreEBSBlockDeviceParameters.
func (in *CoreEBSBlockDeviceParameters) DeepCopy() *CoreEBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(CoreEBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreScalingDownPolicyObservation) DeepCopyInto(out *CoreScalingDownPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreScalingDownPolicyObservation.
func (in *CoreScalingDownPolicyObservation) DeepCopy() *CoreScalingDownPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CoreScalingDownPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreScalingDownPolicyParameters) DeepCopyInto(out *CoreScalingDownPolicyParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Adjustment != nil {
		in, out := &in.Adjustment, &out.Adjustment
		*out = new(string)
		**out = **in
	}
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(int64)
		**out = **in
	}
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(int64)
		**out = **in
	}
	if in.MaxTargetCapacity != nil {
		in, out := &in.MaxTargetCapacity, &out.MaxTargetCapacity
		*out = new(string)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(string)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MinTargetCapacity != nil {
		in, out := &in.MinTargetCapacity, &out.MinTargetCapacity
		*out = new(string)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(int64)
		**out = **in
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
	if in.Statistic != nil {
		in, out := &in.Statistic, &out.Statistic
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreScalingDownPolicyParameters.
func (in *CoreScalingDownPolicyParameters) DeepCopy() *CoreScalingDownPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CoreScalingDownPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreScalingUpPolicyObservation) DeepCopyInto(out *CoreScalingUpPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreScalingUpPolicyObservation.
func (in *CoreScalingUpPolicyObservation) DeepCopy() *CoreScalingUpPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CoreScalingUpPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CoreScalingUpPolicyParameters) DeepCopyInto(out *CoreScalingUpPolicyParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Adjustment != nil {
		in, out := &in.Adjustment, &out.Adjustment
		*out = new(string)
		**out = **in
	}
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(int64)
		**out = **in
	}
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(int64)
		**out = **in
	}
	if in.MaxTargetCapacity != nil {
		in, out := &in.MaxTargetCapacity, &out.MaxTargetCapacity
		*out = new(string)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(string)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MinTargetCapacity != nil {
		in, out := &in.MinTargetCapacity, &out.MinTargetCapacity
		*out = new(string)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(int64)
		**out = **in
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
	if in.Statistic != nil {
		in, out := &in.Statistic, &out.Statistic
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CoreScalingUpPolicyParameters.
func (in *CoreScalingUpPolicyParameters) DeepCopy() *CoreScalingUpPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CoreScalingUpPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceWeightsObservation) DeepCopyInto(out *InstanceWeightsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceWeightsObservation.
func (in *InstanceWeightsObservation) DeepCopy() *InstanceWeightsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceWeightsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceWeightsParameters) DeepCopyInto(out *InstanceWeightsParameters) {
	*out = *in
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.WeightedCapacity != nil {
		in, out := &in.WeightedCapacity, &out.WeightedCapacity
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceWeightsParameters.
func (in *InstanceWeightsParameters) DeepCopy() *InstanceWeightsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceWeightsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterEBSBlockDeviceObservation) DeepCopyInto(out *MasterEBSBlockDeviceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterEBSBlockDeviceObservation.
func (in *MasterEBSBlockDeviceObservation) DeepCopy() *MasterEBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(MasterEBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterEBSBlockDeviceParameters) DeepCopyInto(out *MasterEBSBlockDeviceParameters) {
	*out = *in
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(int64)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(int64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
	if in.VolumesPerInstance != nil {
		in, out := &in.VolumesPerInstance, &out.VolumesPerInstance
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterEBSBlockDeviceParameters.
func (in *MasterEBSBlockDeviceParameters) DeepCopy() *MasterEBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(MasterEBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningTimeoutObservation) DeepCopyInto(out *ProvisioningTimeoutObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningTimeoutObservation.
func (in *ProvisioningTimeoutObservation) DeepCopy() *ProvisioningTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(ProvisioningTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningTimeoutParameters) DeepCopyInto(out *ProvisioningTimeoutParameters) {
	*out = *in
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(int64)
		**out = **in
	}
	if in.TimeoutAction != nil {
		in, out := &in.TimeoutAction, &out.TimeoutAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningTimeoutParameters.
func (in *ProvisioningTimeoutParameters) DeepCopy() *ProvisioningTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(ProvisioningTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskObservation) DeepCopyInto(out *ScheduledTaskObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskObservation.
func (in *ScheduledTaskObservation) DeepCopy() *ScheduledTaskObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduledTaskParameters) DeepCopyInto(out *ScheduledTaskParameters) {
	*out = *in
	if in.Cron != nil {
		in, out := &in.Cron, &out.Cron
		*out = new(string)
		**out = **in
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroupType != nil {
		in, out := &in.InstanceGroupType, &out.InstanceGroupType
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxCapacity != nil {
		in, out := &in.MaxCapacity, &out.MaxCapacity
		*out = new(string)
		**out = **in
	}
	if in.MinCapacity != nil {
		in, out := &in.MinCapacity, &out.MinCapacity
		*out = new(string)
		**out = **in
	}
	if in.TaskType != nil {
		in, out := &in.TaskType, &out.TaskType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduledTaskParameters.
func (in *ScheduledTaskParameters) DeepCopy() *ScheduledTaskParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduledTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatementsObservation) DeepCopyInto(out *StatementsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatementsObservation.
func (in *StatementsObservation) DeepCopy() *StatementsObservation {
	if in == nil {
		return nil
	}
	out := new(StatementsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatementsParameters) DeepCopyInto(out *StatementsParameters) {
	*out = *in
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(int64)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(int64)
		**out = **in
	}
	if in.Statistic != nil {
		in, out := &in.Statistic, &out.Statistic
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatementsParameters.
func (in *StatementsParameters) DeepCopy() *StatementsParameters {
	if in == nil {
		return nil
	}
	out := new(StatementsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepsFileObservation) DeepCopyInto(out *StepsFileObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepsFileObservation.
func (in *StepsFileObservation) DeepCopy() *StepsFileObservation {
	if in == nil {
		return nil
	}
	out := new(StepsFileObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepsFileParameters) DeepCopyInto(out *StepsFileParameters) {
	*out = *in
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepsFileParameters.
func (in *StepsFileParameters) DeepCopy() *StepsFileParameters {
	if in == nil {
		return nil
	}
	out := new(StepsFileParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsObservation) DeepCopyInto(out *TagsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsObservation.
func (in *TagsObservation) DeepCopy() *TagsObservation {
	if in == nil {
		return nil
	}
	out := new(TagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsParameters) DeepCopyInto(out *TagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsParameters.
func (in *TagsParameters) DeepCopy() *TagsParameters {
	if in == nil {
		return nil
	}
	out := new(TagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEBSBlockDeviceObservation) DeepCopyInto(out *TaskEBSBlockDeviceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEBSBlockDeviceObservation.
func (in *TaskEBSBlockDeviceObservation) DeepCopy() *TaskEBSBlockDeviceObservation {
	if in == nil {
		return nil
	}
	out := new(TaskEBSBlockDeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEBSBlockDeviceParameters) DeepCopyInto(out *TaskEBSBlockDeviceParameters) {
	*out = *in
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(int64)
		**out = **in
	}
	if in.SizeInGb != nil {
		in, out := &in.SizeInGb, &out.SizeInGb
		*out = new(int64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
	if in.VolumesPerInstance != nil {
		in, out := &in.VolumesPerInstance, &out.VolumesPerInstance
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEBSBlockDeviceParameters.
func (in *TaskEBSBlockDeviceParameters) DeepCopy() *TaskEBSBlockDeviceParameters {
	if in == nil {
		return nil
	}
	out := new(TaskEBSBlockDeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskScalingDownPolicyObservation) DeepCopyInto(out *TaskScalingDownPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskScalingDownPolicyObservation.
func (in *TaskScalingDownPolicyObservation) DeepCopy() *TaskScalingDownPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(TaskScalingDownPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskScalingDownPolicyParameters) DeepCopyInto(out *TaskScalingDownPolicyParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Adjustment != nil {
		in, out := &in.Adjustment, &out.Adjustment
		*out = new(string)
		**out = **in
	}
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(int64)
		**out = **in
	}
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(int64)
		**out = **in
	}
	if in.MaxTargetCapacity != nil {
		in, out := &in.MaxTargetCapacity, &out.MaxTargetCapacity
		*out = new(string)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(string)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MinTargetCapacity != nil {
		in, out := &in.MinTargetCapacity, &out.MinTargetCapacity
		*out = new(string)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(int64)
		**out = **in
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
	if in.Statistic != nil {
		in, out := &in.Statistic, &out.Statistic
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskScalingDownPolicyParameters.
func (in *TaskScalingDownPolicyParameters) DeepCopy() *TaskScalingDownPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(TaskScalingDownPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskScalingUpPolicyObservation) DeepCopyInto(out *TaskScalingUpPolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskScalingUpPolicyObservation.
func (in *TaskScalingUpPolicyObservation) DeepCopy() *TaskScalingUpPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(TaskScalingUpPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskScalingUpPolicyParameters) DeepCopyInto(out *TaskScalingUpPolicyParameters) {
	*out = *in
	if in.ActionType != nil {
		in, out := &in.ActionType, &out.ActionType
		*out = new(string)
		**out = **in
	}
	if in.Adjustment != nil {
		in, out := &in.Adjustment, &out.Adjustment
		*out = new(string)
		**out = **in
	}
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(int64)
		**out = **in
	}
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.EvaluationPeriods != nil {
		in, out := &in.EvaluationPeriods, &out.EvaluationPeriods
		*out = new(int64)
		**out = **in
	}
	if in.MaxTargetCapacity != nil {
		in, out := &in.MaxTargetCapacity, &out.MaxTargetCapacity
		*out = new(string)
		**out = **in
	}
	if in.Maximum != nil {
		in, out := &in.Maximum, &out.Maximum
		*out = new(string)
		**out = **in
	}
	if in.MetricName != nil {
		in, out := &in.MetricName, &out.MetricName
		*out = new(string)
		**out = **in
	}
	if in.MinTargetCapacity != nil {
		in, out := &in.MinTargetCapacity, &out.MinTargetCapacity
		*out = new(string)
		**out = **in
	}
	if in.Minimum != nil {
		in, out := &in.Minimum, &out.Minimum
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(int64)
		**out = **in
	}
	if in.PolicyName != nil {
		in, out := &in.PolicyName, &out.PolicyName
		*out = new(string)
		**out = **in
	}
	if in.Statistic != nil {
		in, out := &in.Statistic, &out.Statistic
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.Unit != nil {
		in, out := &in.Unit, &out.Unit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskScalingUpPolicyParameters.
func (in *TaskScalingUpPolicyParameters) DeepCopy() *TaskScalingUpPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(TaskScalingUpPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerminationPoliciesObservation) DeepCopyInto(out *TerminationPoliciesObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerminationPoliciesObservation.
func (in *TerminationPoliciesObservation) DeepCopy() *TerminationPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(TerminationPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerminationPoliciesParameters) DeepCopyInto(out *TerminationPoliciesParameters) {
	*out = *in
	if in.Statements != nil {
		in, out := &in.Statements, &out.Statements
		*out = make([]StatementsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerminationPoliciesParameters.
func (in *TerminationPoliciesParameters) DeepCopy() *TerminationPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(TerminationPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}
